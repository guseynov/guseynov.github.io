{"version":3,"sources":["App.js","index.js","sounds/click1.wav","sounds/click2.wav"],"names":["Metronome","props","handleBpmChange","event","bpm","target","value","state","playing","clearInterval","timer","setInterval","playClick","setState","count","startStop","beatsPerMeasure","beat","undefined","click1","Audio","click2","this","play","className","type","onChange","onClick","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sRAoHeA,E,YA9Gb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAmCRC,gBAAkB,SAAAC,GAChB,IAAMC,EAAMD,EAAME,OAAOC,MACrB,EAAKC,MAAMC,SACbC,cAAc,EAAKC,OACnB,EAAKA,MAAQC,YAAY,EAAKC,UAAY,GAAKR,EAAO,KACtD,EAAKS,SAAS,CACZC,MAAO,EACPV,IAAKA,KAGP,EAAKS,SAAS,CACZT,IAAKA,KA/CQ,EAmDnBW,UAAY,WACN,EAAKR,MAAMC,SACbC,cAAc,EAAKC,OACnB,EAAKG,SAAS,CACZL,SAAS,MAGX,EAAKE,MAAQC,YAAY,EAAKC,UAAY,GAAK,EAAKL,MAAMH,IAAO,KACjE,EAAKS,SACH,CACEC,MAAO,EACPN,SAAS,GAEX,EAAKI,aA9DT,EAAKL,MAAQ,CACXO,MAAO,EACPV,IAAK,IACLY,gBAAiB,EACjBC,UAAMC,GAER,EAAKC,OAAS,IAAIC,MAAMD,KACxB,EAAKE,OAAS,IAAID,MAAMC,KATP,E,yEAWN,IAAD,OACNC,KAAKf,MAAMO,MAAQQ,KAAKf,MAAMS,kBAAoB,EACpDM,KAAKT,SACH,CACEI,KAAM,SAER,WACE,EAAKI,OAAOE,UAIhBD,KAAKT,SACH,CACEI,KAAM,YAER,WACE,EAAKE,OAAOI,UAKlBD,KAAKT,SAAS,CACZC,OAAQQ,KAAKf,MAAMO,MAAQ,GAAKQ,KAAKf,MAAMS,oB,+BAoC7C,OACE,yBAAKQ,UAAU,aACb,yBAAKA,UAAU,oBAAf,mBACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,2BAA2BF,KAAKf,MAAMH,IAArD,SAEF,yBAAKoB,UAAU,0CACb,2BACEA,UAAU,4BACVC,KAAK,OACLnB,MAAOgB,KAAKf,MAAMH,IAClBsB,SAAUJ,KAAKpB,kBAEjB,0BACEsB,UACE,kCACCF,KAAKf,MAAMC,SACY,SAApBc,KAAKf,MAAMU,KACT,sCAEF,MAGR,yBAAKO,UAAU,iDACb,+BACA,+BACA,gCAEF,4BACEA,UACE,+BACCF,KAAKf,MAAMC,QAAU,SAAW,IAEnCmB,QAASL,KAAKP,kB,GAvGFa,IAAMC,WCD9BC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,U,kBCJvDC,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.224ab760.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport click1 from \"./sounds/click1.wav\";\nimport click2 from \"./sounds/click2.wav\";\n\nclass Metronome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4,\n      beat: undefined\n    };\n    this.click1 = new Audio(click1);\n    this.click2 = new Audio(click2);\n  }\n  playClick() {\n    if (this.state.count % this.state.beatsPerMeasure === 0) {\n      this.setState(\n        {\n          beat: \"main\"\n        },\n        () => {\n          this.click2.play();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          beat: \"regular\"\n        },\n        () => {\n          this.click1.play();\n        }\n      );\n    }\n\n    this.setState({\n      count: (this.state.count + 1) % this.state.beatsPerMeasure\n    });\n  }\n  handleBpmChange = event => {\n    const bpm = event.target.value;\n    if (this.state.playing) {\n      clearInterval(this.timer);\n      this.timer = setInterval(this.playClick, (60 / bpm) * 1000);\n      this.setState({\n        count: 0,\n        bpm: bpm\n      });\n    } else {\n      this.setState({\n        bpm: bpm\n      });\n    }\n  };\n  startStop = () => {\n    if (this.state.playing) {\n      clearInterval(this.timer);\n      this.setState({\n        playing: false\n      });\n    } else {\n      this.timer = setInterval(this.playClick, (60 / this.state.bpm) * 1000);\n      this.setState(\n        {\n          count: 0,\n          playing: true\n        },\n        this.playClick\n      );\n    }\n  };\n  render() {\n    return (\n      <div className=\"metronome\">\n        <div className=\"metronome__title\">React Metronome</div>\n        <div className=\"metronome__screen metronome-screen\">\n          <div className=\"metronome-screen__value\">{this.state.bpm} BPM</div>\n        </div>\n        <div className=\"metronome__controls metronome-controls\">\n          <input\n            className=\"metronome-controls__input\"\n            type=\"text\"\n            value={this.state.bpm}\n            onChange={this.handleBpmChange}\n          />\n          <span\n            className={\n              \"metronome-controls__indicator \" +\n              (this.state.playing\n                ? this.state.beat === \"main\"\n                  ? \"metronome-controls__indicator--main\"\n                  : \"\"\n                : \"\")\n            }\n          ></span>\n          <div className=\"metronome-controls__speaker metronome-speaker\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <button\n            className={\n              \"metronome-controls__button \" +\n              (this.state.playing ? \"active\" : \"\")\n            }\n            onClick={this.startStop}\n          ></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Metronome;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Metronome from \"./App\";\n\nReactDOM.render(<Metronome />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";"],"sourceRoot":""}