{"version":3,"sources":["sounds/click1.wav","sounds/click2.wav","App.js","index.js"],"names":["module","exports","Metronome","props","handleBpmChange","event","bpm","target","value","state","playing","clearInterval","timer","setInterval","playClick","bind","setState","count","startStop","beatsPerMeasure","beat","undefined","click1","Audio","click2","this","play","className","type","onChange","e","min","max","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,4MCyH5BC,E,kDAnHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmCRC,gBAAkB,SAACC,GACjB,IAAMC,EAAMD,EAAME,OAAOC,MACrB,EAAKC,MAAMC,SACbC,cAAc,EAAKC,OACnB,EAAKA,MAAQC,YAAY,EAAKC,UAAUC,KAAf,gBAA4B,GAAKT,EAAO,KACjE,EAAKU,SAAS,CACZC,MAAO,EACPX,IAAKA,KAGP,EAAKU,SAAS,CACZV,IAAKA,KA/CQ,EAmDnBY,UAAY,WACN,EAAKT,MAAMC,SACbC,cAAc,EAAKC,OACnB,EAAKI,SAAS,CACZN,SAAS,MAGX,EAAKE,MAAQC,YACX,EAAKC,UAAUC,KAAf,gBACC,GAAK,EAAKN,MAAMH,IAAO,KAE1B,EAAKU,SACH,CACEC,MAAO,EACPP,SAAS,GAEX,EAAKI,UAAUC,KAAf,mBAjEJ,EAAKN,MAAQ,CACXQ,MAAO,EACPX,IAAK,IACLa,gBAAiB,EACjBC,UAAMC,GAER,EAAKC,OAAS,IAAIC,MAAMD,KACxB,EAAKE,OAAS,IAAID,MAAMC,KATP,E,wDAWN,IAAD,OACNC,KAAKhB,MAAMQ,MAAQQ,KAAKhB,MAAMU,kBAAoB,EACpDM,KAAKT,SACH,CACEI,KAAM,SAER,WACE,EAAKI,OAAOE,UAIhBD,KAAKT,SACH,CACEI,KAAM,YAER,WACE,EAAKE,OAAOI,UAKlBD,KAAKT,SAAS,CACZC,OAAQQ,KAAKhB,MAAMQ,MAAQ,GAAKQ,KAAKhB,MAAMU,oB,+BAsCrC,IAAD,OACP,OACE,yBAAKQ,UAAU,aACb,yBAAKA,UAAU,oBAAf,mBACA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,2BAA2BF,KAAKhB,MAAMH,IAArD,SAEF,yBAAKqB,UAAU,0CACb,2BACEA,UAAU,4BACVC,KAAK,QACLpB,MAAOiB,KAAKhB,MAAMH,IAClBuB,SAAU,SAACC,GAAD,OAAO,EAAK1B,gBAAgB0B,IACtCC,IAAI,KACJC,IAAI,QAEN,0BACEL,UACE,kCACCF,KAAKhB,MAAMC,SACY,SAApBe,KAAKhB,MAAMW,KACT,sCAEF,MAGR,yBAAKO,UAAU,iDACb,+BACA,+BACA,gCAEF,4BACEA,UACE,+BACCF,KAAKhB,MAAMC,QAAU,SAAW,IAEnCuB,QAASR,KAAKP,UAAUH,KAAKU,c,GA5GjBS,IAAMC,WCD9BC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.6718d95f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","import React from \"react\";\nimport \"./App.css\";\nimport click1 from \"./sounds/click1.wav\";\nimport click2 from \"./sounds/click2.wav\";\n\nclass Metronome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4,\n      beat: undefined,\n    };\n    this.click1 = new Audio(click1);\n    this.click2 = new Audio(click2);\n  }\n  playClick() {\n    if (this.state.count % this.state.beatsPerMeasure === 0) {\n      this.setState(\n        {\n          beat: \"main\",\n        },\n        () => {\n          this.click2.play();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          beat: \"regular\",\n        },\n        () => {\n          this.click1.play();\n        }\n      );\n    }\n\n    this.setState({\n      count: (this.state.count + 1) % this.state.beatsPerMeasure,\n    });\n  }\n  handleBpmChange = (event) => {\n    const bpm = event.target.value;\n    if (this.state.playing) {\n      clearInterval(this.timer);\n      this.timer = setInterval(this.playClick.bind(this), (60 / bpm) * 1000);\n      this.setState({\n        count: 0,\n        bpm: bpm,\n      });\n    } else {\n      this.setState({\n        bpm: bpm,\n      });\n    }\n  };\n  startStop = () => {\n    if (this.state.playing) {\n      clearInterval(this.timer);\n      this.setState({\n        playing: false,\n      });\n    } else {\n      this.timer = setInterval(\n        this.playClick.bind(this),\n        (60 / this.state.bpm) * 1000\n      );\n      this.setState(\n        {\n          count: 0,\n          playing: true,\n        },\n        this.playClick.bind(this)\n      );\n    }\n  };\n  render() {\n    return (\n      <div className=\"metronome\">\n        <div className=\"metronome__title\">React Metronome</div>\n        <div className=\"metronome__screen metronome-screen\">\n          <div className=\"metronome-screen__value\">{this.state.bpm} BPM</div>\n        </div>\n        <div className=\"metronome__controls metronome-controls\">\n          <input\n            className=\"metronome-controls__input\"\n            type=\"range\"\n            value={this.state.bpm}\n            onChange={(e) => this.handleBpmChange(e)}\n            min=\"50\"\n            max=\"200\"\n          />\n          <span\n            className={\n              \"metronome-controls__indicator \" +\n              (this.state.playing\n                ? this.state.beat === \"main\"\n                  ? \"metronome-controls__indicator--main\"\n                  : \"\"\n                : \"\")\n            }\n          ></span>\n          <div className=\"metronome-controls__speaker metronome-speaker\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <button\n            className={\n              \"metronome-controls__button \" +\n              (this.state.playing ? \"active\" : \"\")\n            }\n            onClick={this.startStop.bind(this)}\n          ></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Metronome;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Metronome from \"./App\";\n\nReactDOM.render(<Metronome />, document.getElementById(\"root\"));\n"],"sourceRoot":""}