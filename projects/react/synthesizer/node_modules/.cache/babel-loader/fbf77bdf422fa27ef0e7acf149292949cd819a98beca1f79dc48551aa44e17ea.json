{"ast":null,"code":"import'./styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EffectToggle=function EffectToggle(_ref){var name=_ref.name,effect=_ref.effect,setEffect=_ref.setEffect;return/*#__PURE__*/_jsx(\"div\",{className:\"toggle-container\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:effect,onChange:function onChange(){return setEffect(!effect);}}),/*#__PURE__*/_jsx(\"span\",{className:\"slider round\"}),/*#__PURE__*/_jsx(\"div\",{className:\"toggle-names\",children:/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:name})})]})});};export default EffectToggle;","map":{"version":3,"names":["EffectToggle","name","effect","setEffect"],"sources":["/Users/ahmed/Desktop/Portfolio.nosync/guseynov.github.io/projects/react/synthesizer/src/components/EffectToggle/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { EffectToggleProps } from './interfaces';\nimport './styles.scss';\n\nconst EffectToggle: FC<EffectToggleProps> = ({\n  name,\n  effect,\n  setEffect,\n}): JSX.Element => {\n  return (\n    <div className=\"toggle-container\">\n      <label className=\"toggle\">\n        <input\n          type=\"checkbox\"\n          checked={effect}\n          onChange={() => setEffect(!effect)}\n        />\n        <span className=\"slider round\"></span>\n        <div className=\"toggle-names\">\n          <span className=\"name\">{name}</span>\n        </div>\n      </label>\n    </div>\n  );\n};\n\nexport default EffectToggle;\n"],"mappings":"AAEA,MAAO,eAAe,CAAC,wFAEvB,GAAMA,aAAmC,CAAG,QAAtCA,aAAmC,MAItB,IAHjBC,KAAI,MAAJA,IAAI,CACJC,MAAM,MAANA,MAAM,CACNC,SAAS,MAATA,SAAS,CAET,mBACE,YAAK,SAAS,CAAC,kBAAkB,uBAC/B,eAAO,SAAS,CAAC,QAAQ,wBACvB,cACE,IAAI,CAAC,UAAU,CACf,OAAO,CAAED,MAAO,CAChB,QAAQ,CAAE,0BAAMC,UAAS,CAAC,CAACD,MAAM,CAAC,EAAC,EACnC,cACF,aAAM,SAAS,CAAC,cAAc,EAAQ,cACtC,YAAK,SAAS,CAAC,cAAc,uBAC3B,aAAM,SAAS,CAAC,MAAM,UAAED,IAAI,EAAQ,EAChC,GACA,EACJ,CAEV,CAAC,CAED,cAAeD,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}