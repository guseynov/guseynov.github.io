{"version":3,"sources":["App.js","index.js"],"names":["axios","require","citiesAPIUrl","APIKey","Forecast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeCity","setState","city","chooseCity","e","inputValue","target","textContent","citiesListVisible","that","assertThisInitialized","cityEncoded","encodeURIComponent","state","trim","get","then","response","forecastObj","Sunday","hours","icon","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","i","data","list","length","time","Date","dt","weather","temp","Number","main","getDay","getHours","forecastArr","key","entries","hoursArr","hour","push","react_default","a","createElement","className","Math","round","alt","src","forecast","updateInputValue","value","citiesList","map","index","onClick","name","country","_this2","onSubmit","preventDefault","onKeyDown","onChange","type","placeholder","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fae4477d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nconst axios = require('axios');\nconst citiesAPIUrl = 'http://geodb-free-service.wirefreethought.com/v1/geo/cities?limit=10&offset=0&namePrefix=';\nconst APIKey = '12975cb5d84452a454240c06140fbbc9';\nclass Forecast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tcity: '',\n\t\t\tcitiesListVisible: false,\n\t\t\tcitiesList: [],\n\t\t\tforecast: []\n\t\t}\n\t}\n\tremoveCity = () => {\n\t\tthis.setState({\n\t\t\tcity: ''\n\t\t});\n\t}\n\tchooseCity = (e) => {\n\t\tthis.setState({\n\t\t\tinputValue: e.target.textContent,\n\t\t\tcity: e.target.textContent,\n\t\t\tcitiesListVisible: false\n\t\t}, () => {\n\t\t\tlet that = this;\n\t\t\tlet cityEncoded = encodeURIComponent(this.state.city.trim());\n\t\t\taxios.get('http://api.openweathermap.org/data/2.5/forecast?q=' + cityEncoded + '&mode=json&appid=' + APIKey)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tlet forecastObj = {\n\t\t\t\t\t\t\"Sunday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Monday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Tuesday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Wednesday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Thursday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Friday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Saturday\": {\n\t\t\t\t\t\t\t\"hours\": {},\n\t\t\t\t\t\t\t\"icon\": ''\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tfor (let i = 0; i < response.data.list.length; i++) {\n\t\t\t\t\t\tlet time = new Date(response.data.list[i].dt * 1000);\n\t\t\t\t\t\tlet icon = response.data.list[i].weather[0].icon;\n\t\t\t\t\t\tlet temp = Number(response.data.list[i].main.temp) - 273.15;\n\n\t\t\t\t\t\tswitch (time.getDay()) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tforecastObj['Sunday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Sunday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tforecastObj['Monday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Monday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tforecastObj['Tuesday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Tuesday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tforecastObj['Wednesday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Wednesday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tforecastObj['Thursday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Thursday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t\tforecastObj['Friday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Friday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\tforecastObj['Saturday']['hours'][time.getHours()] = {\n\t\t\t\t\t\t\t\t\ttemp: temp\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tforecastObj['Saturday']['icon'] = icon;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet forecastArr = [];\n\t\t\t\t\tfor (let key in forecastObj) {\n\t\t\t\t\t\tif (Object.entries(forecastObj[key]['hours']).length === 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet hoursArr = [];\n\t\t\t\t\t\tfor (let hour in forecastObj[key]['hours']) {\n\t\t\t\t\t\t\thoursArr.push(\n\t\t\t\t\t\t\t\t<div key={hour} className=\"forecast-card__entry\">\n\t\t\t\t\t\t\t\t\t<span className=\"forecast-card__hour\">{hour}:00</span>\n\t\t\t\t\t\t\t\t\t<span className=\"forecast-card__temperature\">{Math.round(forecastObj[key]['hours'][hour]['temp'])}Â°C</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforecastArr.push(\n\t\t\t\t\t\t\t<div key={key} className=\"forecast-card\">\n\t\t\t\t\t\t\t\t<p className=\"forecast-card__day\">{key}</p>\n\t\t\t\t\t\t\t\t<img className=\"forecast-card__image\" alt=\"\" src={'http://openweathermap.org/img/w/' + forecastObj[key]['icon'] + '.png'} />\n\t\t\t\t\t\t\t\t<div className=\"forecast-card__entries\">\n\t\t\t\t\t\t\t\t\t{hoursArr}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tthat.setState({\n\t\t\t\t\t\tforecast: forecastArr\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\tupdateInputValue = (e) => {\n\t\tthis.setState({\n\t\t\tinputValue: e.target.value\n\t\t}, () => {\n\t\t\tif (this.state.inputValue.length > 3) {\n\t\t\t\tlet that = this;\n\t\t\t\taxios.get(citiesAPIUrl + this.state.inputValue)\n\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\tif (response.data.data.length > 0) {\n\t\t\t\t\t\t\tthat.setState({\n\t\t\t\t\t\t\t\tcitiesList: response.data.data.map((city, index) =>\n\t\t\t\t\t\t\t\t\t<li key={index} onClick={that.chooseCity} className=\"weather-app-cities-list__item\">{city.name + ', ' + city.country}</li>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcitiesListVisible: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcitiesListVisible: false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={(e) => { e.preventDefault(); }} className=\"weather-app\">\n\t\t\t\t<header className=\"weather-app__header\">\n\t\t\t\t\t<h1 className=\"weather-app__title\">Weather forecast for</h1>\n\t\t\t\t\t<input value={this.state.city || this.state.inputValue} onKeyDown={(e) => { if (e.key === 'Backspace') { this.removeCity(); } }} onChange={(e) => this.updateInputValue(e, e.key)} className=\"weather-app__input\" type=\"text\" placeholder=\"enter city name\" />\n\t\t\t\t\t<ul className={\"weather-app__cities-list weather-app-cities-list \" + (this.state.citiesListVisible ? 'active' : '')}>\n\t\t\t\t\t\t{this.state.citiesList}\n\t\t\t\t\t</ul>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"forecast-cards\">\n\t\t\t\t\t{this.state.forecast}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Forecast;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Forecast from './App';\n\nReactDOM.render(<Forecast />, document.getElementById('root'));\n"],"sourceRoot":""}