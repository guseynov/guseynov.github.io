{"version":3,"sources":["redux/initialStore.js","redux/store.js","redux/index.js","helpers/addition.js","helpers/division.js","helpers/multiplication.js","helpers/substraction.js","helpers/write.js","helpers/zerosChecker.js","helpers/decimal.js","helpers/firstArgHandler.js","helpers/secondArgHandler.js","redux/actionCreators.js","Calculator.js","index.js"],"names":["defaultPalette","palettes","initialStore","action","undefined","firstArg","secondArg","display","result","colors","background","wrapper","borders","digits","actions","store","createStore","arguments","length","newStore","type","randomNumber","Math","floor","random","randomPalette","document","body","style","backgroundColor","Object","objectSpread","Big","plus","valueOf","div","division","times","multiplication","minus","substraction","newArg","zerosChecker","acceptDecimals","value","argumentIndex","decimal","toString","firstArgHandler","secondArgHandler","write","payload","composeWithDevTools","addition","clean","arg","equals","setAction","changeColors","dotenv","config","mapDispatchToProps","Calculator","this","props","_this","react_default","a","createElement","className","borderColor","onClick","src","process","alt","React","Component","connect","state","rootElement","getElementById","ReactDOM","render","es","src_Calculator_0"],"mappings":"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","file":"static/js/main.2d517228.chunk.js","sourcesContent":["import * as palettes from '../palettes/100.json';\r\nconst defaultPalette = palettes.default[0];\r\nexport const initialStore = {\r\n    action: undefined,\r\n    firstArg: undefined,\r\n    secondArg: undefined,\r\n    display: 0,\r\n    result: undefined,\r\n    colors: {\r\n        background: defaultPalette[0],\r\n        wrapper: defaultPalette[1],\r\n        borders: defaultPalette[2],\r\n        digits: defaultPalette[3],\r\n        actions: defaultPalette[4]\r\n    }\r\n};\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './index';\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { initialStore } from './initialStore';\r\nimport { addition } from '../helpers/addition';\r\nimport { division } from '../helpers/division';\r\nimport { multiplication } from '../helpers/multiplication';\r\nimport { substraction } from '../helpers/substraction';\r\nimport { write } from '../helpers/write';\r\nimport * as palettes from '../palettes/100.json';\r\n\r\nexport default function rootReducer(store = initialStore, action) {\r\n    let newStore = {};\r\n    let result = undefined;\r\n    switch (action.type) {\r\n        case 'CHANGE_COLORS': {\r\n            const randomNumber = Math.floor(Math.random() * 100);\r\n            const randomPalette = palettes.default[randomNumber];\r\n            newStore = {\r\n                colors: {\r\n                    background: randomPalette[0],\r\n                    wrapper: randomPalette[1],\r\n                    borders: randomPalette[2],\r\n                    digits: randomPalette[3],\r\n                    actions: randomPalette[4]\r\n                }\r\n            };\r\n\r\n            document.body.style.backgroundColor = newStore.colors.background;\r\n            return { ...store, ...newStore };\r\n        }\r\n        case 'ADDITION':\r\n            newStore = {\r\n                action: 'addition'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'DIVISION':\r\n            newStore = {\r\n                action: 'division'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'MULTIPLICATION':\r\n            newStore = {\r\n                action: 'multiplication'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'SUBSTRACTION':\r\n            newStore = {\r\n                action: 'substraction'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'EQUALS':\r\n            switch (store.action) {\r\n                case 'addition':\r\n                    result = addition(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: undefined,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'division':\r\n                    if (store.secondArg === 0) {\r\n                        result = 'Error';\r\n                    } else {\r\n                        result = division(store.firstArg, store.secondArg);\r\n                    }\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: undefined,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'multiplication':\r\n                    result = multiplication(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: undefined,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'substraction':\r\n                    result = substraction(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: undefined,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                default:\r\n                    return initialStore;\r\n            }\r\n        case 'CLEAN':\r\n            newStore = initialStore;\r\n            return { ...store, ...newStore };\r\n        case 'WRITE':\r\n            result = write(\r\n                action.payload,\r\n                store.firstArg,\r\n                store.secondArg,\r\n                store.action,\r\n                store.display\r\n            );\r\n            if (result) {\r\n                switch (result.argumentIndex) {\r\n                    case 1:\r\n                        newStore = {\r\n                            firstArg: result.value,\r\n                            display: result.value\r\n                        };\r\n                        break;\r\n                    case 2:\r\n                        newStore = {\r\n                            secondArg: result.value,\r\n                            display: result.value\r\n                        };\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            return { ...store, ...newStore };\r\n        case 'SET_ACTION':\r\n            newStore = {\r\n                action: action.payload\r\n            };\r\n            return { ...store, ...newStore };\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\n\r\nexport function addition(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).plus(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function division(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).div(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function multiplication(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).times(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function substraction(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).minus(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { zerosChecker } from './zerosChecker';\r\nimport { firstArgHandler } from './firstArgHandler';\r\nimport { secondArgHandler } from './secondArgHandler';\r\nimport { decimal } from './decimal';\r\n\r\nexport function write(newArg, firstArg, secondArg, action, display) {\r\n    if (!zerosChecker(newArg, firstArg, secondArg)) {\r\n        if (newArg === '.') {\r\n            return decimal(firstArg, secondArg, display);\r\n        }\r\n        if (firstArg === undefined || action === undefined) {\r\n            return firstArgHandler(newArg, firstArg, display);\r\n        } else {\r\n            return secondArgHandler(newArg, secondArg, display);\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function zerosChecker(newArg, firstArg, secondArg) {\r\n    let result = false;\r\n    const zeroInthestore = firstArg === 0 || secondArg === 0;\r\n    if (newArg === 0 && zeroInthestore) {\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\n","export function decimal(firstArg, secondArg, acceptDecimals) {\r\n    if (acceptDecimals === false) {\r\n        return false;\r\n    }\r\n    if (firstArg === undefined || firstArg === 0) {\r\n        return { value: (firstArg || 0) + '.', argumentIndex: 1 };\r\n    } else {\r\n        return { value: (secondArg || 0) + '.', argumentIndex: 2 };\r\n    }\r\n}\r\n","export function firstArgHandler(newArg, firstArg, display) {\r\n    if (display.length >= 5) {\r\n        return false;\r\n    }\r\n    if (firstArg) {\r\n        firstArg = firstArg.toString() + newArg.toString();\r\n    } else {\r\n        firstArg = newArg;\r\n    }\r\n    return { value: firstArg, argumentIndex: 1 };\r\n}\r\n","export function secondArgHandler(newArg, secondArg, display) {\r\n    if (display.length >= 5 && secondArg) {\r\n        return false;\r\n    }\r\n    if (secondArg) {\r\n        secondArg = secondArg.toString() + newArg.toString();\r\n    } else {\r\n        secondArg = newArg;\r\n    }\r\n    return { value: secondArg, argumentIndex: 2 };\r\n}\r\n","export function addition() {\r\n    return {\r\n        type: 'ADDITION'\r\n    };\r\n}\r\n\r\nexport function clean() {\r\n    return {\r\n        type: 'CLEAN'\r\n    };\r\n}\r\n\r\nexport function write(arg) {\r\n    return {\r\n        type: 'WRITE',\r\n        payload: arg\r\n    };\r\n}\r\n\r\nexport function division() {\r\n    return {\r\n        type: 'DIVISION'\r\n    };\r\n}\r\nexport function multiplication() {\r\n    return {\r\n        type: 'MULTIPLICATION'\r\n    };\r\n}\r\n\r\nexport function substraction() {\r\n    return {\r\n        type: 'SUBSTRACTION'\r\n    };\r\n}\r\n\r\nexport function equals() {\r\n    return {\r\n        type: 'EQUALS'\r\n    };\r\n}\r\n\r\nexport function setAction(arg) {\r\n    return {\r\n        type: 'SET_ACTION',\r\n        payload: arg\r\n    };\r\n}\r\n\r\nexport function changeColors() {\r\n    return {\r\n        type: 'CHANGE_COLORS'\r\n    };\r\n}\r\n","/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport dotenv from 'dotenv';\nimport * as actions from './redux/actionCreators';\nimport './Calculator.css';\ndotenv.config();\n\nconst mapDispatchToProps = actions;\n\nfunction mapStateToProps(state) {\n    return {\n        display: state.display,\n        action: state.action,\n        colors: state.colors\n    };\n}\n\nclass Calculator extends React.Component {\n    componentDidMount() {\n        this.props.changeColors();\n    }\n    render() {\n        return (\n            <div className=\"main-wrapper\">\n                <header className=\"header\">\n                    <h1>simple calculator powered by React + Redux stack</h1>\n                </header>\n                <div\n                    style={{\n                        backgroundColor: this.props.colors.wrapper\n                    }}\n                    className=\"calculator-wrapper\"\n                >\n                    <div\n                        style={{\n                            borderColor: this.props.colors.borders\n                        }}\n                        className=\"calculator-screen\"\n                    >\n                        {this.props.display}\n                    </div>\n                    <div\n                        style={{\n                            borderColor: this.props.colors.borders\n                        }}\n                        className=\"calculator-buttons\"\n                    >\n                        <div className=\"calculator-buttons__digits\">\n                            <div className=\"calculator-buttons__row\">\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .actions\n                                    }}\n                                    onClick={() => this.props.clean()}\n                                    className=\"calculator-button calculator-button--clear\"\n                                >\n                                    C\n                                </button>\n                            </div>\n\n                            <div className=\"calculator-buttons__row\">\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(7)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    7\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(8)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    8\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(9)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    9\n                                </button>\n                            </div>\n\n                            <div className=\"calculator-buttons__row\">\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(4)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    4\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(5)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    5\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(6)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    6\n                                </button>\n                            </div>\n                            <div className=\"calculator-buttons__row\">\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(1)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    1\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(2)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    2\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(3)}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    3\n                                </button>\n                            </div>\n                            <div className=\"calculator-buttons__row\">\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write(0)}\n                                    className=\"calculator-button calculator-button--digit calculator-button--zero\"\n                                >\n                                    0\n                                </button>\n                                <button\n                                    style={{\n                                        backgroundColor: this.props.colors\n                                            .digits\n                                    }}\n                                    onClick={() => this.props.write('.')}\n                                    className=\"calculator-button calculator-button--digit\"\n                                >\n                                    .\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"calculator-buttons__actions\">\n                            <button\n                                style={{\n                                    backgroundColor: this.props.colors.actions\n                                }}\n                                onClick={() => this.props.division()}\n                                className={\n                                    'calculator-button calculator-button--action ' +\n                                    (this.props.action === 'div'\n                                        ? 'active'\n                                        : '')\n                                }\n                            >\n                                <img\n                                    src={process.env.PUBLIC_URL + 'divide.svg'}\n                                    alt=\"\"\n                                />\n                            </button>\n                            <button\n                                style={{\n                                    backgroundColor: this.props.colors.actions\n                                }}\n                                onClick={() => this.props.multiplication()}\n                                className={\n                                    'calculator-button calculator-button--action ' +\n                                    (this.props.action === 'times'\n                                        ? 'active'\n                                        : '')\n                                }\n                            >\n                                <img\n                                    src={\n                                        process.env.PUBLIC_URL + 'multiply.svg'\n                                    }\n                                    alt=\"\"\n                                />\n                            </button>\n                            <button\n                                style={{\n                                    backgroundColor: this.props.colors.actions\n                                }}\n                                onClick={() => this.props.substraction()}\n                                className={\n                                    'calculator-button calculator-button--action ' +\n                                    (this.props.action === 'minus'\n                                        ? 'active'\n                                        : '')\n                                }\n                            >\n                                <img\n                                    src={\n                                        process.env.PUBLIC_URL + 'substract.svg'\n                                    }\n                                    alt=\"\"\n                                />\n                            </button>\n                            <button\n                                style={{\n                                    backgroundColor: this.props.colors.actions\n                                }}\n                                onClick={() => this.props.addition()}\n                                className={\n                                    'calculator-button calculator-button--action ' +\n                                    (this.props.action === 'plus'\n                                        ? 'active'\n                                        : '')\n                                }\n                            >\n                                <img\n                                    src={process.env.PUBLIC_URL + 'add.svg'}\n                                    alt=\"\"\n                                />\n                            </button>\n                            <button\n                                style={{\n                                    backgroundColor: this.props.colors.actions\n                                }}\n                                onClick={() => this.props.equals()}\n                                className=\"calculator-button calculator-button--action\"\n                            >\n                                <img\n                                    src={process.env.PUBLIC_URL + 'equal.svg'}\n                                    alt=\"\"\n                                />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    onClick={() => this.props.changeColors()}\n                    className=\"color-btn\"\n                >\n                    Change the colors!\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Calculator);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Calculator from './Calculator';\nimport '@/typeface-inter/inter.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <Provider store={store}>\n        <Calculator />\n    </Provider>,\n    rootElement\n);\n"],"sourceRoot":""}