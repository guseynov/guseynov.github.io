{"version":3,"sources":["redux/initialStore.js","redux/store.js","redux/index.js","helpers/addition.js","helpers/division.js","helpers/multiplication.js","helpers/substraction.js","helpers/write.js","helpers/zerosChecker.js","helpers/decimal.js","helpers/firstArgHandler.js","helpers/secondArgHandler.js","redux/actionCreators.js","components/Screen.js","components/DigitButton.js","components/ActionIcon.js","components/ActionButton.js","components/Buttons.js","Calculator.js","index.js"],"names":["defaultPalette","palettes","initialStore","action","undefined","firstArg","secondArg","display","result","colors","background","wrapper","borders","digits","actions","store","createStore","arguments","length","newStore","type","randomNumber","Math","floor","random","randomPalette","document","body","style","backgroundColor","_objectSpread","Big","plus","valueOf","div","division","times","multiplication","minus","substraction","newArg","zerosChecker","acceptDecimals","value","argumentIndex","decimal","toString","firstArgHandler","secondArgHandler","write","payload","composeWithDevTools","clean","arg","equals","setAction","changeColors","fontColorContrast","require","Screen","react_default","a","createElement","borderColor","this","props","color","className","Component","connect","state","mapDispatchToProps","DigitButton","_this","onClick","concat","additionalClass","ActionIcon","src","actionName","alt","ActionButton","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","callAction","bind","assertThisInitialized","displayName","components_ActionIcon","Buttons","components_ActionButton","components_DigitButton","dotenv","config","Calculator","title","components_Screen","components_Buttons","React","rootElement","getElementById","ReactDOM","render","es","src_Calculator_0"],"mappings":"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","file":"static/js/main.72be036c.chunk.js","sourcesContent":["import * as palettes from '../palettes/100.json';\r\nconst defaultPalette = palettes.default[2];\r\nexport const initialStore = {\r\n    action: undefined,\r\n    firstArg: undefined,\r\n    secondArg: undefined,\r\n    display: 0,\r\n    result: undefined,\r\n    colors: {\r\n        background: defaultPalette[0],\r\n        wrapper: defaultPalette[1],\r\n        borders: defaultPalette[2],\r\n        digits: defaultPalette[3],\r\n        actions: defaultPalette[4]\r\n    }\r\n};\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './index';\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { initialStore } from './initialStore';\r\nimport { addition } from '../helpers/addition';\r\nimport { division } from '../helpers/division';\r\nimport { multiplication } from '../helpers/multiplication';\r\nimport { substraction } from '../helpers/substraction';\r\nimport { write } from '../helpers/write';\r\nimport * as palettes from '../palettes/100.json';\r\n\r\nexport default function rootReducer(store = initialStore, action) {\r\n    let newStore = {};\r\n    let result = undefined;\r\n    switch (action.type) {\r\n        case 'CHANGE_COLORS': {\r\n            const randomNumber = Math.floor(Math.random() * 100);\r\n            const randomPalette = palettes.default[randomNumber];\r\n            newStore = {\r\n                colors: {\r\n                    background: randomPalette[0],\r\n                    wrapper: randomPalette[1],\r\n                    borders: randomPalette[2],\r\n                    digits: randomPalette[3],\r\n                    actions: randomPalette[4]\r\n                }\r\n            };\r\n\r\n            document.body.style.backgroundColor = newStore.colors.background;\r\n            return { ...store, ...newStore };\r\n        }\r\n        case 'ADDITION':\r\n            newStore = {\r\n                action: 'add'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'DIVISION':\r\n            newStore = {\r\n                action: 'div'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'MULTIPLICATION':\r\n            newStore = {\r\n                action: 'times'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'SUBSTRACTION':\r\n            newStore = {\r\n                action: 'minus'\r\n            };\r\n            return { ...store, ...newStore };\r\n        case 'EQUALS':\r\n            switch (store.action) {\r\n                case 'add':\r\n                    result = addition(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: result,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'div':\r\n                    if (store.secondArg === 0) {\r\n                        result = 'Error';\r\n                    } else {\r\n                        result = division(store.firstArg, store.secondArg);\r\n                    }\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: result,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'times':\r\n                    result = multiplication(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: result,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                case 'minus':\r\n                    result = substraction(store.firstArg, store.secondArg);\r\n                    newStore = {\r\n                        result: result,\r\n                        display: result,\r\n                        action: undefined,\r\n                        firstArg: result,\r\n                        secondArg: undefined\r\n                    };\r\n                    return { ...store, ...newStore };\r\n                default:\r\n                    return initialStore;\r\n            }\r\n        case 'CLEAN':\r\n            newStore = initialStore;\r\n            return { ...store, ...newStore };\r\n        case 'WRITE':\r\n            result = write(\r\n                action.payload,\r\n                store.firstArg,\r\n                store.secondArg,\r\n                store.action,\r\n                store.display\r\n            );\r\n            if (result) {\r\n                switch (result.argumentIndex) {\r\n                    case 1:\r\n                        newStore = {\r\n                            firstArg: result.value,\r\n                            display: result.value\r\n                        };\r\n                        break;\r\n                    case 2:\r\n                        newStore = {\r\n                            secondArg: result.value,\r\n                            display: result.value\r\n                        };\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            return { ...store, ...newStore };\r\n        case 'SET_ACTION':\r\n            newStore = {\r\n                action: action.payload\r\n            };\r\n            return { ...store, ...newStore };\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\n\r\nexport function addition(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).plus(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function division(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).div(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function multiplication(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).times(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import Big from 'big.js';\r\nexport function substraction(firstArg, secondArg) {\r\n    if (firstArg && secondArg) {\r\n        return new Big(firstArg).minus(secondArg).valueOf();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { zerosChecker } from './zerosChecker';\r\nimport { firstArgHandler } from './firstArgHandler';\r\nimport { secondArgHandler } from './secondArgHandler';\r\nimport { decimal } from './decimal';\r\n\r\nexport function write(newArg, firstArg, secondArg, action, display) {\r\n    if (!zerosChecker(newArg, firstArg, secondArg)) {\r\n        if (newArg === '.') {\r\n            return decimal(firstArg, secondArg, display);\r\n        }\r\n        if (firstArg === undefined || action === undefined) {\r\n            return firstArgHandler(newArg, firstArg, display);\r\n        } else {\r\n            return secondArgHandler(newArg, secondArg, display);\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function zerosChecker(newArg, firstArg, secondArg) {\r\n    let result = false;\r\n    const zeroInthestore = firstArg === 0 || secondArg === 0;\r\n    if (newArg === 0 && zeroInthestore) {\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\n","export function decimal(firstArg, secondArg, acceptDecimals) {\r\n    if (acceptDecimals === false) {\r\n        return false;\r\n    }\r\n    if (firstArg === undefined || firstArg == 0) {\r\n        return { value: (firstArg || 0) + '.', argumentIndex: 1 };\r\n    } else {\r\n        return { value: (secondArg || 0) + '.', argumentIndex: 2 };\r\n    }\r\n}\r\n","export function firstArgHandler(newArg, firstArg, display) {\r\n    if (display.length >= 5) {\r\n        return false;\r\n    }\r\n    if (firstArg) {\r\n        firstArg = firstArg.toString() + newArg.toString();\r\n    } else {\r\n        firstArg = newArg;\r\n    }\r\n    return { value: firstArg, argumentIndex: 1 };\r\n}\r\n","export function secondArgHandler(newArg, secondArg, display) {\r\n    if (display.length >= 5 && secondArg) {\r\n        return false;\r\n    }\r\n    if (secondArg) {\r\n        secondArg = secondArg.toString() + newArg.toString();\r\n    } else {\r\n        secondArg = newArg;\r\n    }\r\n    return { value: secondArg, argumentIndex: 2 };\r\n}\r\n","export function plus() {\r\n    return {\r\n        type: 'ADDITION'\r\n    };\r\n}\r\n\r\nexport function clean() {\r\n    return {\r\n        type: 'CLEAN'\r\n    };\r\n}\r\n\r\nexport function write(arg) {\r\n    return {\r\n        type: 'WRITE',\r\n        payload: arg\r\n    };\r\n}\r\n\r\nexport function div() {\r\n    return {\r\n        type: 'DIVISION'\r\n    };\r\n}\r\nexport function times() {\r\n    return {\r\n        type: 'MULTIPLICATION'\r\n    };\r\n}\r\n\r\nexport function minus() {\r\n    return {\r\n        type: 'SUBSTRACTION'\r\n    };\r\n}\r\n\r\nexport function equals() {\r\n    return {\r\n        type: 'EQUALS'\r\n    };\r\n}\r\n\r\nexport function setAction(arg) {\r\n    return {\r\n        type: 'SET_ACTION',\r\n        payload: arg\r\n    };\r\n}\r\n\r\nexport function changeColors() {\r\n    return {\r\n        type: 'CHANGE_COLORS'\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nconst fontColorContrast = require('font-color-contrast');\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        display: state.display,\r\n        colors: state.colors\r\n    };\r\n}\r\nclass Screen extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    borderColor: this.props.colors.borders,\r\n                    color: fontColorContrast(this.props.colors.wrapper)\r\n                }}\r\n                className=\"calculator-screen\"\r\n            >\r\n                {this.props.display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actionCreators';\r\nconst fontColorContrast = require('font-color-contrast');\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        action: state.action,\r\n        colors: state.colors\r\n    };\r\n}\r\nconst mapDispatchToProps = actions;\r\nclass DigitButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                style={{\r\n                    backgroundColor: this.props.colors.digits,\r\n                    color: fontColorContrast(this.props.colors.digits)\r\n                }}\r\n                onClick={() => this.props.write(this.props.value)}\r\n                className={`\r\n                    calculator-button\r\n                    calculator-button--digit\r\n                    ${this.props.additionalClass}\r\n                `}\r\n            >\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DigitButton);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nconst fontColorContrast = require('font-color-contrast');\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        colors: state.colors\r\n    };\r\n}\r\nclass ActionIcon extends Component {\r\n    render() {\r\n        return fontColorContrast(this.props.colors.actions) === '#ffffff' ? (\r\n            <img src={this.props.actionName + '--white.svg'} alt=\"\" />\r\n        ) : (\r\n            <img src={this.props.actionName + '--black.svg'} alt=\"\" />\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ActionIcon);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actionCreators';\r\nimport ActionIcon from './ActionIcon';\r\nconst fontColorContrast = require('font-color-contrast');\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        action: state.action,\r\n        colors: state.colors\r\n    };\r\n}\r\nconst mapDispatchToProps = actions;\r\nclass ActionButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.callAction = this.callAction.bind(this);\r\n    }\r\n    callAction() {\r\n        this.props[this.props.actionName].call();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                style={{\r\n                    backgroundColor: this.props.colors.actions,\r\n                    color: fontColorContrast(this.props.colors.actions)\r\n                }}\r\n                onClick={this.callAction}\r\n                className={`\r\n                    calculator-button\r\n                    calculator-button--action\r\n                    ${this.props.additionalClass || ''}\r\n                    ${\r\n                        this.props.action === this.props.actionName\r\n                            ? 'active'\r\n                            : ''\r\n                    }\r\n                `}\r\n            >\r\n                {this.props.displayName ? (\r\n                    this.props.displayName\r\n                ) : (\r\n                    <ActionIcon actionName={this.props.actionName} />\r\n                )}\r\n            </button>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ActionButton);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actionCreators';\r\nimport DigitButton from './DigitButton';\r\nimport ActionButton from './ActionButton';\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        action: state.action,\r\n        colors: state.colors\r\n    };\r\n}\r\nconst mapDispatchToProps = actions;\r\nclass Buttons extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    borderColor: this.props.colors.borders\r\n                }}\r\n                className=\"calculator-buttons\"\r\n            >\r\n                <div className=\"calculator-buttons__digits\">\r\n                    <div className=\"calculator-buttons__row\">\r\n                        <ActionButton\r\n                            additionalClass=\"calculator-button--clear\"\r\n                            actionName=\"clean\"\r\n                            displayName=\"C\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"calculator-buttons__row\">\r\n                        <DigitButton value=\"7\" />\r\n                        <DigitButton value=\"8\" />\r\n                        <DigitButton value=\"9\" />\r\n                    </div>\r\n\r\n                    <div className=\"calculator-buttons__row\">\r\n                        <DigitButton value=\"4\" />\r\n                        <DigitButton value=\"5\" />\r\n                        <DigitButton value=\"6\" />\r\n                    </div>\r\n                    <div className=\"calculator-buttons__row\">\r\n                        <DigitButton value=\"1\" />\r\n                        <DigitButton value=\"2\" />\r\n                        <DigitButton value=\"3\" />\r\n                    </div>\r\n                    <div className=\"calculator-buttons__row\">\r\n                        <DigitButton\r\n                            additionalClass=\"calculator-button--zero\"\r\n                            value=\"0\"\r\n                        />\r\n                        <DigitButton value=\".\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"calculator-buttons__actions\">\r\n                    <ActionButton actionName=\"div\" />\r\n                    <ActionButton actionName=\"times\" />\r\n                    <ActionButton actionName=\"minus\" />\r\n                    <ActionButton actionName=\"plus\" />\r\n                    <ActionButton actionName=\"equals\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Buttons);\r\n","/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actionCreators';\nimport dotenv from 'dotenv';\nimport './Calculator.css';\nimport Screen from './components/Screen';\nimport Buttons from './components/Buttons';\nconst fontColorContrast = require('font-color-contrast');\ndotenv.config();\n\nfunction mapStateToProps(state) {\n    return {\n        action: state.action,\n        colors: state.colors\n    };\n}\n\nconst mapDispatchToProps = actions;\nclass Calculator extends React.Component {\n    componentDidMount() {\n        document.title = 'Calculator';\n    }\n    render() {\n        return (\n            <div className=\"main-wrapper\">\n                <header className=\"header\">\n                    <h1\n                        style={{\n                            color: fontColorContrast(\n                                this.props.colors.background\n                            )\n                        }}\n                    >\n                        simple calculator powered by React + Redux stack\n                    </h1>\n                </header>\n                <div\n                    style={{\n                        backgroundColor: this.props.colors.wrapper\n                    }}\n                    className=\"calculator-wrapper\"\n                >\n                    <Screen />\n                    <Buttons />\n                </div>\n                <button\n                    onClick={() => this.props.changeColors()}\n                    className=\"color-btn\"\n                >\n                    Change the colors!\n                </button>\n            </div>\n        );\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Calculator);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Calculator from './Calculator';\nimport '@/typeface-inter/inter.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <Provider store={store}>\n        <Calculator />\n    </Provider>,\n    rootElement\n);\n"],"sourceRoot":""}